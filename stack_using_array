package dsa;

public class StackasArray {
    int max = 1000;
    int[] stack = new int[max-1];

    int top;

    public StackasArray() {

        top = -1;
    }

    public void push(int x) {

        if(top >= (max-1)) {
            System.out.println("stack overflow");
        }
        else {
            stack[++top] = x;
            System.out.println("pushed to stack");
        }
    }
    public int pop() {
        if(stack[top] < 0) {
            System.out.println("stack underflow");
            return -1;
        }
        else {
            int x = stack[top--];

            return x;
        }
    }
    public int peek() {
        if(stack[top] < 0) {
            System.out.println("stack underflow");
            return -1;
        }
        else {
            int x = stack[top];
            return x;
        }
    }

    public boolean isempty() {
        return top == -1;
    }


    public static void main(String[] args) {

        StackasArray stack = new StackasArray();

        stack.push(1);
        stack.push(2);
        stack.push(3);
        stack.push(4);

        while (!stack.isempty()) {
            System.out.println(stack.pop());
        }
    }
}
